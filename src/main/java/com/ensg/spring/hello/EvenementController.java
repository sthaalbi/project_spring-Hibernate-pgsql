package com.ensg.spring.hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class EvenementController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data

    private EvenementRepository evenementRepository;
    @GetMapping(path="/addEvent") // Map ONLY GET Requests
    public @ResponseBody
    String addNewUser (@RequestParam String intitule
            , @RequestParam String theme
            , @RequestParam String date_debut
            , @RequestParam String duree
            , @RequestParam String nb_part_max
            , @RequestParam String description
            , @RequestParam String organisateur
            , @RequestParam String type_event) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request


        Evenement event = new Evenement( intitule , theme, date_debut, duree,
                nb_part_max, description, organisateur, type_event);

        event.setIntitule();
        event.setTheme();
        event.setDate_debut();
        event.setDuree();
        event.setNb_part_max();
        event.setDescription();
        event.setOrganisateur();
        event.setType_event();

        evenementRepository.save(event);
        return "Saved";
    }

    @GetMapping(path="/allEvent")
    public @ResponseBody Iterable<Evenement> getAllUsers() {
        // This returns a JSON or XML with the users
        return evenementRepository.findAll();
    }
}