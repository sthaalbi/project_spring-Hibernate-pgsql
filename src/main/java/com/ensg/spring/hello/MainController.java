package com.ensg.spring.hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ParticipantRepository userRepository;
    @Autowired
    private EvenementRepository evenementRepository;

    @GetMapping(path="/addParticipant") // Map ONLY GET Requests
    public @ResponseBody String addNewUser (@RequestParam String nom
            , @RequestParam String prenom
            , @RequestParam String email
            , @RequestParam String datenaiss) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Participant n = new Participant(nom,  prenom,  email,  datenaiss);
        n.setNom(nom);
        n.setPrenom(prenom);
        n.setEmail(email);
        n.setDatenaiss(datenaiss);
        userRepository.save(n);
        Evenement event1 = new Evenement( );
        //event1.setParticipant(n);
        n.addE(event1);
        evenementRepository.save(event1);
        userRepository.save(n);
        return "Saved";


    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Participant> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
}
